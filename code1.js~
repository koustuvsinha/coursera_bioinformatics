'use strict';

var fs = require('fs');
var input = fs.readFileSync(process.argv[2]).toString();
var textArray = input.split('\n');
//console.log(textArray);
var text = textArray[0];
var k = textArray[1];
fs.writeFile('output_genome.txt',frequentWords(text,9));


var frequentWords = function(text,k) {
	var frequentPatterns = [];
	var count = [];
	for(var i=0;i<=text.length-k;i++) {
		var pattern = computeText(text,i,k);
		count[i] = patternCount(text,pattern);
		//console.log("Checking for pattern " + pattern + ", count = " + count[i]);			
	}
	console.log(count);	
	var maxCount = count.reduce(
		function(i,max) { if(i>max) return i; else return max; });
	console.log("Maxount = " + maxCount);
	for(var i=0;i<=text.length-k;i++) {
		if(count[i]==maxCount) {
			frequentPatterns.push(computeText(text,i,k));
		}
	}
	console.log(uniq(frequentPatterns));
};

function patternCount(text,pattern) {
	var count = 0;
	var diff = text.length - pattern.length;
	for(var i=0;i<=diff;i++) {
		if(computeText(text,i,pattern.length)==pattern) 
			count++;
	}
	return count;
}

function computeText(text,n,p) {
	var s="";	
	while(p--) {
		s=s.concat(text.charAt(n));
		n++;
	}
	return s;
}

function uniq(a) {
    var prims = {"boolean":{}, "number":{}, "string":{}}, objs = [];

    return a.filter(function(item) {
        var type = typeof item;
        if(type in prims)
            return prims[type].hasOwnProperty(item) ? false : (prims[type][item] = true);
        else
            return objs.indexOf(item) >= 0 ? false : objs.push(item);
    });
}

function patternToNumber(pattern) {
	var dict = { "A" : 0, "C" : 1, "G" : 2, "T" : 3 };
	var l = pattern.length;
	var sum = 0;
	for(var i=0;i<l;i++) {
		sum = sum + Math.pow(4,(l-i-1))*dict[pattern.charAt(i)];
	}
	return sum;
}

function NumberToPattern(number,l) {
	var dict = ["A","C","G","T"];
	var pattern = [];
	for(var i=0;i<l;i++) {
 		//console.log("Number = " + number + ", l = " + l);
 		var m = number % 4;
 		pattern[i]=dict[m];
 	number=Math.floor(number/4);
	}
	return pattern.reduce(function(i,text) { return text.concat(i); });
}

function computingFrequencies(text,k) {
	var frequencyArray = [];
	for(var i=0;i<Math.pow(4,k);i++) {
		frequencyArray[i]=0;
	}
	for(var i=0;i<=text.length-k;i++) {
		frequencyArray[patternToNumber(computeText(text,i,k))]++;
	}
	var output = "";
	frequencyArray.forEach(function(item) {
           output=output.concat(item).concat(" ");
	});
	return output;
}
